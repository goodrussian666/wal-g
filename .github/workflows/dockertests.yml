name: Docker tests

on:
  workflow_call:
    inputs:
      command-json-array:
        required: true
        type: string

env:
  CACHE_FOLDER: ~/docker-images-${{ github.sha }}
  CACHE_FILE_UBUNTU_18_04: ~/docker-images-${{ github.sha }}/wal-g_ubuntu-18.04.tgz
  CACHE_FILE_UBUNTU_20_04: ~/docker-images-${{ github.sha }}/wal-g_ubuntu-20.04.tgz
  CACHE_FILE_GOLANG: ~/docker-images-${{ github.sha }}/wal-g_golang.tgz
  CACHE_FILE_DOCKER_PREFIX: ~/docker-images-${{ github.sha }}/docker_prefix.tgz
  IMAGE: wal-g/docker_prefix
  IMAGE_UBUNTU_18_04: wal-g/ubuntu:18.04
  IMAGE_UBUNTU_20_04: wal-g/ubuntu:20.04
  IMAGE_GOLANG: wal-g/golang
  IMAGES_CACHE_KEY: docker-images-${{ github.sha }}
  GO_VERSION: "1.22.5"

jobs:
  buildimages:
    name: Build images
    runs-on: ubuntu-20.04
    steps:
      #  use cache to pass docker images to the test jobs
          
      # build images
      - name: Build images
        if: steps.cache-images.outputs.cache-hit != 'true'
        run: echo hello

